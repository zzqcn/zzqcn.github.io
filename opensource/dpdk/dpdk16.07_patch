diff -uprN dpdk-orgin/config/common_base dpdk-patch/config/common_base
--- dpdk-orgin/config/common_base	2016-11-30 17:28:48.000000000 +0800
+++ dpdk-patch/config/common_base	2017-01-04 14:43:17.770131974 +0800
@@ -34,40 +34,42 @@
 # define executive environment
 # RTE_EXEC_ENV values are the directories in mk/exec-env/
 #
-CONFIG_RTE_EXEC_ENV=
+CONFIG_RTE_EXEC_ENV=linuxapp
 
 #
 # define the architecture we compile for.
 # RTE_ARCH values are the directories in mk/arch/
 #
-CONFIG_RTE_ARCH=
+CONFIG_RTE_ARCH=x86_64
 
 #
 # machine can define specific variables or action for a specific board
 # RTE_MACHINE values are the directories in mk/machine/
 #
-CONFIG_RTE_MACHINE=
+CONFIG_RTE_MACHINE=native
 
 #
 # The compiler we use.
 # RTE_TOOLCHAIN values are the directories in mk/toolchain/
 #
-CONFIG_RTE_TOOLCHAIN=
+CONFIG_RTE_TOOLCHAIN=gcc
 
 #
 # Use intrinsics or assembly code for key routines
 #
-CONFIG_RTE_FORCE_INTRINSICS=n
+CONFIG_RTE_FORCE_INTRINSICS=y
 
 #
 # Machine forces strict alignment constraints.
 #
-CONFIG_RTE_ARCH_STRICT_ALIGN=n
+CONFIG_RTE_ARCH_STRICT_ALIGN=y
 
 #
 # Compile to share library
 #
-CONFIG_RTE_BUILD_SHARED_LIB=n
+CONFIG_RTE_BUILD_SHARED_LIB=y
+CONFIG_RTE_BUILD_COMBINE_LIBS=y
+CONFIG_RTE_LIBNAME=intel_dpdk
 
 #
 # Use newest code breaking previous ABI
@@ -306,7 +308,7 @@ CONFIG_RTE_PMD_RING_MAX_TX_RINGS=16
 #
 # Compile software PMD backed by PCAP files
 #
-CONFIG_RTE_LIBRTE_PMD_PCAP=n
+CONFIG_RTE_LIBRTE_PMD_PCAP=y
 
 #
 # Compile link bonding PMD library
@@ -420,7 +422,7 @@ CONFIG_RTE_LIBRTE_MBUF=y
 CONFIG_RTE_LIBRTE_MBUF_DEBUG=n
 CONFIG_RTE_MBUF_DEFAULT_MEMPOOL_OPS="ring_mp_mc"
 CONFIG_RTE_MBUF_REFCNT_ATOMIC=y
-CONFIG_RTE_PKTMBUF_HEADROOM=128
+CONFIG_RTE_PKTMBUF_HEADROOM=256
 
 #
 # Compile librte_timer
@@ -575,7 +577,7 @@ CONFIG_RTE_INSECURE_FUNCTION_WARNING=n
 #
 # Compile the test application
 #
-CONFIG_RTE_APP_TEST=y
+CONFIG_RTE_APP_TEST=n
 CONFIG_RTE_APP_TEST_RESOURCE_TAR=n
 
 #
diff -uprN dpdk-orgin/lib/libdpdk.map dpdk-patch/lib/libdpdk.map
--- dpdk-orgin/lib/libdpdk.map	1970-01-01 08:00:00.000000000 +0800
+++ dpdk-patch/lib/libdpdk.map	2017-01-04 14:43:03.154132077 +0800
@@ -0,0 +1,19 @@
+DPDK_2.0 {
+
+};
+
+DPDK_2.1 {
+
+} DPDK_2.0;
+
+DPDK_2.2 {
+
+} DPDK_2.1;
+
+DPDK_16.04 {
+
+} DPDK_2.2;
+
+DPDK_16.07 {
+
+} DPDK_16.04;
diff -uprN dpdk-orgin/lib/librte_eal/common/include/rte_pci.h dpdk-patch/lib/librte_eal/common/include/rte_pci.h
--- dpdk-orgin/lib/librte_eal/common/include/rte_pci.h	2016-11-30 17:28:48.000000000 +0800
+++ dpdk-patch/lib/librte_eal/common/include/rte_pci.h	2017-01-04 14:40:27.038133178 +0800
@@ -82,6 +82,12 @@ extern "C" {
 #include <stdint.h>
 #include <inttypes.h>
 
+#ifndef UINT8_MAX
+#define UINT8_MAX (255U)
+#endif
+#ifndef UINT16_MAX
+#define UINT16_MAX (65535U)
+#endif
 #include <rte_interrupts.h>
 
 TAILQ_HEAD(pci_device_list, rte_pci_device); /**< PCI devices in D-linked Q. */
diff -uprN dpdk-orgin/mk/rte.app.mk dpdk-patch/mk/rte.app.mk
--- dpdk-orgin/mk/rte.app.mk	2016-11-30 17:28:48.000000000 +0800
+++ dpdk-patch/mk/rte.app.mk	2017-01-04 14:42:53.882132143 +0800
@@ -60,6 +60,17 @@ _LDLIBS-y += -L$(RTE_SDK_BIN)/lib
 # Order is important: from higher level to lower level
 #
 
+# zhaop
+_LDLIBS-$(CONFIG_RTE_BUILD_COMBINE_LIBS)    += -l$(CONFIG_RTE_LIBNAME)
+_LDLIBS-y += -lm
+_LDLIBS-y += -lpcap
+
+
+# zhaop, combine libs, BEGIN -------------------------
+ifeq ($(CONFIG_RTE_BUILD_COMBINE_LIBS),n)
+
+_LDLIBS-$(CONFIG_RTE_LIBRTE_DISTRIBUTOR)    += -lrte_distributor
+_LDLIBS-$(CONFIG_RTE_LIBRTE_REORDER)        += -lrte_reorder
 ifeq ($(CONFIG_RTE_EXEC_ENV_LINUXAPP),y)
 _LDLIBS-$(CONFIG_RTE_LIBRTE_KNI)            += -lrte_kni
 _LDLIBS-$(CONFIG_RTE_LIBRTE_IVSHMEM)        += -lrte_ivshmem
@@ -68,26 +79,49 @@ endif
 _LDLIBS-$(CONFIG_RTE_LIBRTE_PIPELINE)       += -lrte_pipeline
 _LDLIBS-$(CONFIG_RTE_LIBRTE_TABLE)          += -lrte_table
 _LDLIBS-$(CONFIG_RTE_LIBRTE_PORT)           += -lrte_port
-
-_LDLIBS-$(CONFIG_RTE_LIBRTE_PDUMP)          += -lrte_pdump
-_LDLIBS-$(CONFIG_RTE_LIBRTE_DISTRIBUTOR)    += -lrte_distributor
-_LDLIBS-$(CONFIG_RTE_LIBRTE_REORDER)        += -lrte_reorder
-_LDLIBS-$(CONFIG_RTE_LIBRTE_IP_FRAG)        += -lrte_ip_frag
-_LDLIBS-$(CONFIG_RTE_LIBRTE_METER)          += -lrte_meter
-_LDLIBS-$(CONFIG_RTE_LIBRTE_SCHED)          += -lrte_sched
+_LDLIBS-$(CONFIG_RTE_LIBRTE_TIMER)          += -lrte_timer
+_LDLIBS-$(CONFIG_RTE_LIBRTE_HASH)           += -lrte_hash
+_LDLIBS-$(CONFIG_RTE_LIBRTE_JOBSTATS)       += -lrte_jobstats
 _LDLIBS-$(CONFIG_RTE_LIBRTE_LPM)            += -lrte_lpm
+_LDLIBS-$(CONFIG_RTE_LIBRTE_POWER)          += -lrte_power
 # librte_acl needs --whole-archive because of weak functions
 _LDLIBS-$(CONFIG_RTE_LIBRTE_ACL)            += --whole-archive
 _LDLIBS-$(CONFIG_RTE_LIBRTE_ACL)            += -lrte_acl
 _LDLIBS-$(CONFIG_RTE_LIBRTE_ACL)            += --no-whole-archive
-_LDLIBS-$(CONFIG_RTE_LIBRTE_JOBSTATS)       += -lrte_jobstats
-_LDLIBS-$(CONFIG_RTE_LIBRTE_POWER)          += -lrte_power
+_LDLIBS-$(CONFIG_RTE_LIBRTE_PDUMP)          += -lrte_pdump
+_LDLIBS-$(CONFIG_RTE_LIBRTE_IP_FRAG)        += -lrte_ip_frag
+_LDLIBS-$(CONFIG_RTE_LIBRTE_METER)          += -lrte_meter
+_LDLIBS-$(CONFIG_RTE_LIBRTE_SCHED)          += -lrte_sched
+_LDLIBS-$(CONFIG_RTE_LIBRTE_VHOST)          += -lrte_vhost
+
+endif # ! CONFIG_RTE_BUILD_COMBINE_LIBS
+# zhaop, combine libs, END   -------------------------
 
 _LDLIBS-y += --whole-archive
 
-_LDLIBS-$(CONFIG_RTE_LIBRTE_TIMER)          += -lrte_timer
-_LDLIBS-$(CONFIG_RTE_LIBRTE_HASH)           += -lrte_hash
-_LDLIBS-$(CONFIG_RTE_LIBRTE_VHOST)          += -lrte_vhost
+ifeq ($(CONFIG_RTE_BUILD_SHARED_LIB),n)
+# The static libraries do not know their dependencies.
+# So linking with static library requires explicit dependencies.
+_LDLIBS-$(CONFIG_RTE_LIBRTE_EAL)            += -lrt
+_LDLIBS-$(CONFIG_RTE_LIBRTE_SCHED)          += -lm
+_LDLIBS-$(CONFIG_RTE_LIBRTE_SCHED)          += -lrt
+_LDLIBS-$(CONFIG_RTE_LIBRTE_METER)          += -lm
+ifeq ($(CONFIG_RTE_LIBRTE_VHOST_NUMA),y)
+_LDLIBS-$(CONFIG_RTE_LIBRTE_VHOST)          += -lnuma
+endif
+ifeq ($(CONFIG_RTE_LIBRTE_VHOST_USER),n)
+_LDLIBS-$(CONFIG_RTE_LIBRTE_VHOST)          += -lfuse
+endif
+_LDLIBS-$(CONFIG_RTE_PORT_PCAP)             += -lpcap
+endif # !CONFIG_RTE_BUILD_SHARED_LIB
+
+
+# zhaop
+_LDLIBS-y += --start-group
+# zhaop, combile libs, BEGIN -------------------------
+ifeq ($(CONFIG_RTE_BUILD_COMBINE_LIBS),n)
+
+
 
 _LDLIBS-$(CONFIG_RTE_LIBRTE_KVARGS)         += -lrte_kvargs
 _LDLIBS-$(CONFIG_RTE_LIBRTE_MBUF)           += -lrte_mbuf
@@ -144,27 +178,13 @@ _LDLIBS-$(CONFIG_RTE_LIBRTE_PMD_KASUMI)
 _LDLIBS-$(CONFIG_RTE_LIBRTE_PMD_KASUMI)     += -L$(LIBSSO_KASUMI_PATH)/build -lsso_kasumi
 endif # CONFIG_RTE_LIBRTE_CRYPTODEV
 
-endif # !CONFIG_RTE_BUILD_SHARED_LIBS
+endif # !CONFIG_RTE_BUILD_SHARED_LIB
+endif # !CONFIG_RTE_BUILD_COMBINE_LIBS
 
+_LDLIBS-y += $(EXECENV_LDLIBS)
+_LDLIBS-y += --end-group
 _LDLIBS-y += --no-whole-archive
 
-ifeq ($(CONFIG_RTE_BUILD_SHARED_LIB),n)
-# The static libraries do not know their dependencies.
-# So linking with static library requires explicit dependencies.
-_LDLIBS-$(CONFIG_RTE_LIBRTE_EAL)            += -lrt
-_LDLIBS-$(CONFIG_RTE_LIBRTE_SCHED)          += -lm
-_LDLIBS-$(CONFIG_RTE_LIBRTE_SCHED)          += -lrt
-_LDLIBS-$(CONFIG_RTE_LIBRTE_METER)          += -lm
-ifeq ($(CONFIG_RTE_LIBRTE_VHOST_NUMA),y)
-_LDLIBS-$(CONFIG_RTE_LIBRTE_VHOST)          += -lnuma
-endif
-ifeq ($(CONFIG_RTE_LIBRTE_VHOST_USER),n)
-_LDLIBS-$(CONFIG_RTE_LIBRTE_VHOST)          += -lfuse
-endif
-_LDLIBS-$(CONFIG_RTE_PORT_PCAP)             += -lpcap
-endif # !CONFIG_RTE_BUILD_SHARED_LIBS
-
-_LDLIBS-y += $(EXECENV_LDLIBS)
 
 LDLIBS += $(_LDLIBS-y) $(CPU_LDLIBS) $(EXTRA_LDLIBS)
 
@@ -193,13 +213,13 @@ build: _postbuild
 exe2cmd = $(strip $(call dotfile,$(patsubst %,%.cmd,$(1))))
 
 ifeq ($(LINK_USING_CC),1)
-O_TO_EXE = $(CC) -o $@ $(CFLAGS) $(OBJS-y) $(call linkerprefix, \
-	$(LDLIBS) $(LDFLAGS) $(LDFLAGS_$(@)) $(EXTRA_LDFLAGS) \
-	$(MAPFLAGS))
+override EXTRA_LDFLAGS := $(call linkerprefix,$(EXTRA_LDFLAGS))
+O_TO_EXE = $(CC) $(CFLAGS) $(LDFLAGS_$(@)) \
+	-Wl,-Map=$(@).map,--cref -o $@ $(OBJS-y) $(call linkerprefix,$(LDFLAGS)) \
+	$(EXTRA_LDFLAGS) $(call linkerprefix,$(LDLIBS))
 else
-O_TO_EXE = $(LD) -o $@ $(OBJS-y) \
-	$(LDLIBS) $(LDFLAGS) $(LDFLAGS_$(@)) $(EXTRA_LDFLAGS) \
-	$(MAPFLAGS)
+O_TO_EXE = $(LD) $(LDFLAGS) $(LDFLAGS_$(@)) $(EXTRA_LDFLAGS) \
+	-Map=$(@).map --cref -o $@ $(OBJS-y) $(LDLIBS)
 endif
 O_TO_EXE_STR = $(subst ','\'',$(O_TO_EXE)) #'# fix syntax highlight
 O_TO_EXE_DISP = $(if $(V),"$(O_TO_EXE_STR)","  LD $(@)")
diff -uprN dpdk-orgin/mk/rte.combinedlib.mk dpdk-patch/mk/rte.combinedlib.mk
--- dpdk-orgin/mk/rte.combinedlib.mk	2016-11-30 17:28:48.000000000 +0800
+++ dpdk-patch/mk/rte.combinedlib.mk	2017-01-04 14:42:53.886132143 +0800
@@ -30,6 +30,7 @@
 #   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 include $(RTE_SDK)/mk/rte.vars.mk
+include $(RTE_SDK)/mk/internal/rte.build-pre.mk
 
 default: all
 
@@ -39,13 +40,32 @@ else
 EXT:=.a
 endif
 
-RTE_LIBNAME := dpdk
-COMBINEDLIB := lib$(RTE_LIBNAME)$(EXT)
+COMBINEDLIB := lib$(CONFIG_RTE_LIBNAME)$(EXT)
 
 LIBS := $(filter-out $(COMBINEDLIB), $(notdir $(wildcard $(RTE_OUTPUT)/lib/*$(EXT))))
+OBJS = $(wildcard $(RTE_OUTPUT)/build/lib/*.o)
+CPU_LDFLAGS += --version-script=$(SRCDIR)/lib/libdpdk.map
+
+ifeq ($(LINK_USING_CC),1)
+# Override the definition of LD here, since we're linking with CC
+LD := $(CC) $(CPU_CFLAGS)
+O_TO_S = $(LD) $(call linkerprefix,$(CPU_LDFLAGS)) \
+	-shared $(OBJS) -o $(RTE_OUTPUT)/lib/$(COMBINEDLIB)
+else
+O_TO_S = $(LD) $(CPU_LDFLAGS) \
+	-shared $(OBJS) -o $(RTE_OUTPUT)/lib/$(COMBINEDLIB)
+endif
+
+O_TO_S_STR = $(subst ','\'',$(O_TO_S)) #'# fix syntax highlight
+O_TO_S_DISP = $(if $(V),"$(O_TO_S_STR)","  LD $(@)")
+O_TO_S_CMD = "cmd_$@ = $(O_TO_S_STR)"
+O_TO_S_DO = @set -e; \
+    echo $(O_TO_S_DISP); \
+    $(O_TO_S)
 
 all: FORCE
-	$(Q)echo "GROUP ( $(LIBS) )" > $(RTE_OUTPUT)/lib/$(COMBINEDLIB)
+	$(O_TO_S_DO)
+
 
 #
 # Clean all generated files
diff -uprN dpdk-orgin/mk/rte.lib.mk dpdk-patch/mk/rte.lib.mk
--- dpdk-orgin/mk/rte.lib.mk	2016-11-30 17:28:48.000000000 +0800
+++ dpdk-patch/mk/rte.lib.mk	2017-01-04 14:42:53.886132143 +0800
@@ -47,6 +47,7 @@ ifeq ($(CONFIG_RTE_NEXT_ABI),y)
 LIB := $(LIB).1
 endif
 CPU_LDFLAGS += --version-script=$(SRCDIR)/$(EXPORT_MAP)
+#$(info >>>EXPORT_MAP: ${EXPORT_MAP})
 endif
 endif
 
@@ -106,6 +107,24 @@ O_TO_S_DO = @set -e; \
 	$(O_TO_S) && \
 	echo $(O_TO_S_CMD) > $(call exe2cmd,$(@))
 
+ifeq ($(CONFIG_RTE_BUILD_SHARED_LIB),n)
+O_TO_C = $(AR) crus $(LIB_ONE) $(OBJS-y)
+O_TO_C_STR = $(subst ','\'',$(O_TO_C)) #'# fix syntax highlight
+O_TO_C_DISP = $(if $(V),"$(O_TO_C_STR)","  AR_C $(@)")
+O_TO_C_DO = @set -e; \
+	$(lib_dir) \
+	$(copy_obj)
+else
+O_TO_C = $(LD) -shared $(OBJS-y) -o $(LIB_ONE)
+O_TO_C_STR = $(subst ','\'',$(O_TO_C)) #'# fix syntax highlight
+O_TO_C_DISP = $(if $(V),"$(O_TO_C_STR)","  LD_C $(@)")
+O_TO_C_DO = @set -e; \
+	$(lib_dir) \
+	$(copy_obj)
+endif
+
+copy_obj = cp -f $(OBJS-y) $(RTE_OUTPUT)/build/lib;
+lib_dir = [ -d $(RTE_OUTPUT)/lib ] || mkdir -p $(RTE_OUTPUT)/lib;
 -include .$(LIB).cmd
 
 #
@@ -131,6 +150,14 @@ endif
 		$(depfile_newer)),\
 		$(O_TO_S_DO))
 
+ifeq ($(CONFIG_RTE_BUILD_COMBINE_LIBS),y)
+	$(if $(or \
+        $(file_missing),\
+        $(call cmdline_changed,$(O_TO_C_STR)),\
+        $(depfile_missing),\
+        $(depfile_newer)),\
+        $(O_TO_C_DO))
+endif
 else
 $(LIB): $(OBJS-y) $(DEP_$(LIB)) FORCE
 	@[ -d $(dir $@) ] || mkdir -p $(dir $@)
@@ -146,6 +173,14 @@ $(LIB): $(OBJS-y) $(DEP_$(LIB)) FORCE
 	    $(depfile_missing),\
 	    $(depfile_newer)),\
 	    $(O_TO_A_DO))
+ifeq ($(CONFIG_RTE_BUILD_COMBINE_LIBS),y)
+	$(if $(or \
+        $(file_missing),\
+        $(call cmdline_changed,$(O_TO_C_STR)),\
+        $(depfile_missing),\
+        $(depfile_newer)),\
+        $(O_TO_C_DO))
+endif
 endif
 
 #
diff -uprN dpdk-orgin/tools/dpdk-setup.sh dpdk-patch/tools/dpdk-setup.sh
--- dpdk-orgin/tools/dpdk-setup.sh	2016-11-30 17:28:48.000000000 +0800
+++ dpdk-patch/tools/dpdk-setup.sh	2017-01-04 14:43:50.178131746 +0800
@@ -105,7 +105,8 @@ setup_target()
 		fi
 	fi
 	if [ "$QUIT" == "0" ] ; then
-		make install T=${RTE_TARGET}
+		make config T=${RTE_TARGET} O=${RTE_TARGET}
+        make O=${RTE_TARGET}
 	fi
 	echo "------------------------------------------------------------------------------"
 	echo " RTE_TARGET exported as $RTE_TARGET"
